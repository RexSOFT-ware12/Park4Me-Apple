workflows:
  version: 2.0
  deploy_prod:
    name: Deploy to Production
    max_build_duration: 120
    environment:
      # Define environment variables like SSH keys and known hosts
      vars:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        SSH_KEY_PATH: $HOME/private.key

    # Define the steps in your deployment pipeline
    jobs:
      - name: Extract tag and deploy
        type: script
        script: |
          # Extract the tag name from the Git reference
          TAG_NAME=$(echo ${CIRCLE_SHA1#refs/tags/})
          echo "Tag name: $TAG_NAME"
          
          # Set up SSH key for deployment
          echo "$SSH_PRIVATE_KEY" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

          # SSH Deployment to the server
          echo "Deploying to build4.gonative.io"
          cat > deploy.sh << 'END'
            #!/bin/bash
            set -e
            cd ~/prod/build2
            git checkout -- .
            git fetch
            echo "Checking out $TAG_NAME"
            git checkout $TAG_NAME
            npm install

            echo "Stopping builder"
            forever stopall

            echo "Starting builder"
            ./prod-forever.sh 2
            
            echo "Deployed prod"
          END

          scp -i $SSH_KEY_PATH deploy.sh builder@build4.gonative.io:deploy.sh
          ssh -i $SSH_KEY_PATH builder@build4.gonative.io bash --login ./deploy.sh
          
          # Optional second deployment (uncomment if needed)
          # echo "Deploying to build5.gonative.io"
          # ssh -i $SSH_KEY_PATH -o "StrictHostKeyChecking=no" builder@build5.gonative.io << 'ENDSSH'
          #   echo "Stopping builder"
          #   forever stopall
          #   cd ~/prod/build2
          #   git checkout -- .
          #   git fetch
          #   echo "Checking out $TAG_NAME"
          #   git checkout $TAG_NAME
          #   npm install
          #   echo "Starting builder"
          #   ./prod-forever.sh 2
          #   echo "Deployed prod"
          # ENDSSH
    publishing:
      # Use Codemagic's app store connect integration (for app deployments to TestFlight or App Store)
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - QA Testers
          - Internal Team
        submit_to_app_store: false
